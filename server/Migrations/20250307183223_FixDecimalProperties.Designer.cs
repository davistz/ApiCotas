// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dataContext;

#nullable disable

namespace ApiCotas.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250307183223_FixDecimalProperties")]
    partial class FixDecimalProperties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiCotas.Cotas.ConsorcioEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataCreate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_create");

                    b.Property<DateTime>("DataUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_update");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<int>("NumeroParticipantes")
                        .HasColumnType("int")
                        .HasColumnName("numero_participantes");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("valor_total");

                    b.HasKey("Id");

                    b.ToTable("Consorcios");
                });

            modelBuilder.Entity("ApiCotas.Cotas.CotaEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("ConsorcioId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("consorcioId");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_create");

                    b.Property<DateTime>("DataUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_update");

                    b.Property<double>("NumeroCota")
                        .HasColumnType("float")
                        .HasColumnName("numeroCota");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.ToTable("Cotas");
                });

            modelBuilder.Entity("ApiCotas.Cotas.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_create");

                    b.Property<DateTime>("DataUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_update");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("senha");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ApiCotas.Cotas.UsuarioConsorcio", b =>
                {
                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.Property<string>("ConsorcioId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("consorcio_id");

                    b.HasKey("UsuarioId", "ConsorcioId");

                    b.HasIndex("ConsorcioId");

                    b.ToTable("UserConsorcios");
                });

            modelBuilder.Entity("ApiCotas.Cotas.UsuarioConsorcio", b =>
                {
                    b.HasOne("ApiCotas.Cotas.ConsorcioEntity", "Consorcio")
                        .WithMany("UsuarioConsorcios")
                        .HasForeignKey("ConsorcioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCotas.Cotas.UserEntity", "Usuario")
                        .WithMany("UsuarioConsorcios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consorcio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiCotas.Cotas.ConsorcioEntity", b =>
                {
                    b.Navigation("UsuarioConsorcios");
                });

            modelBuilder.Entity("ApiCotas.Cotas.UserEntity", b =>
                {
                    b.Navigation("UsuarioConsorcios");
                });
#pragma warning restore 612, 618
        }
    }
}
